import requests
from bs4 import BeautifulSoup
import os

BASE_URL = "https://datosabiertos.gob.ec"
DATASET_URL = BASE_URL + "/dataset/base-de-emergencias"
DEST_DIR = "emergencias_csv"

def get_resource_pages():
    resp = requests.get(DATASET_URL)
    resp.raise_for_status()
    soup = BeautifulSoup(resp.text, "html.parser")
    # Enlaces a las páginas de cada recurso
    resource_links = []
    for a in soup.find_all("a", href=True):
        href = a['href']
        if "/dataset/base-de-emergencias/resource/" in href and href.startswith("/dataset/"):
            full_url = BASE_URL + href
            if full_url not in resource_links:
                resource_links.append(full_url)
    return resource_links

def get_csv_link(resource_page_url):
    resp = requests.get(resource_page_url)
    resp.raise_for_status()
    soup = BeautifulSoup(resp.text, "html.parser")
    # Buscar cualquier enlace que tenga 'download' y termine en .csv
    for a in soup.find_all("a", href=True):
        href = a['href']
        if "/download/" in href and href.endswith(".csv"):
            csv_link = href if href.startswith("http") else BASE_URL + href
            return csv_link
    return None


def download_csv(csv_url, dest_folder=DEST_DIR):
    os.makedirs(dest_folder, exist_ok=True)
    filename = csv_url.split("/")[-1].split("?")[0]
    filepath = os.path.join(dest_folder, filename)
    if os.path.exists(filepath):
        print(f"[SKIP] {filename} ya existe")
        return
    print(f"[DOWN] {filename}")
    r = requests.get(csv_url, stream=True)
    r.raise_for_status()
    with open(filepath, "wb") as f:
        for chunk in r.iter_content(1024*8):
            f.write(chunk)

def main():
    pages = get_resource_pages()
    print(f"Encontradas {len(pages)} páginas de recurso.")
    for resource_url in pages:
        csv_url = get_csv_link(resource_url)
        if csv_url:
            download_csv(csv_url)
        else:
            print(f"[WARN] No se encontró CSV en {resource_url}")

if __name__ == "__main__":
    main()
